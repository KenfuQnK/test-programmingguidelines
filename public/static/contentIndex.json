{"001---Naming/001---Introducción":{"title":"001 - Introducción","links":["001---Naming/002---Nomenclatura","001---Naming/010---Prefijos","001---Naming/011---Alias","XXX---Station"],"tags":[],"content":"002 - Nomenclatura\n010 - Prefijos\n011 - Alias\nXXX - Station"},"001---Naming/002---Nomenclatura":{"title":"002 - Nomenclatura","links":[],"tags":[],"content":"01. Dispositivos del Hardware\nLos dispositivos del hardware en la lista de Devices Explorer deben ser nombrados con el código eléctrico identificativo.\n02. Variables\nPara una mejor interpretación del significado de las variables utilizadas en el programa, se definen unas normas de uso. Estas normas deben facilitar la interpretación del programa entre los programadores.\nLas variables deben empezar en Mayúscula si se trata de una palabra significativa, y en minúscula si se trata de una palabra o abreviatura que define la naturaleza de la variable. Si es necesario crear una variable con más de una palabra, el cambio de palabra se hará con la inicial en mayúscula.\n\nA continuación se muestran varios ejemplos:\n\nCada palabra significativa debe empezar en Mayúscula\n\n\n\n                  \n                  Correcto \n                  \n                \nmod1XXX_Machine.Command.Reset\nmod1XXX_Machine.Command.Home\nmod1XXX_stLoading.Status.InPick\nmod1XXX_stLoading.Status.PartsPicked\n\n\n\n                  \n                  Incorrecto \n                  \n                \nmod1XXX_stLoading.Status.partsPicked\nmod1XXX_StLoading.status.Partspicked\n\n\nDespués de cualquier palabra anterior, la siguiente si viene unida debe ser también en Mayúscula\n\n\n\n                  \n                  Correcto \n                  \n                \naiMod1_AirPressure\n\n\n\n                  \n                  Incorrecto \n                  \n                \naimod1_Airpressure\naiMod1_airPressure\n\n\nPrefijos auxiliares o abreviaciones que indiquen la naturaleza del tag deben empezar en minúscula:\n\n\n\n                  \n                  Correcto \n                  \n                \nmod1_Machine\nauxActivateSomething\nstFilling\nstrText\n\n\n\n                  \n                  Incorrecto \n                  \n                \nStrText\n\n\nLas barrabajas deben usarse cuando se desee agrupar, y no deben usarse simplemente para separar palabras:\n\n\n\n                  \n                  Correcto \n                  \n                \ndiMod1_RejectCylinderReed_Home\ndiMod1_RejectCylinderReed_Work\ndiMod1_GripperCylinderReed_Home\ndiMod1_GripperCylinderReed_Work\n\n\n\n                  \n                  Incorrecto \n                  \n                \nstReject.Status.Vial_has_to_be_reject\n"},"001---Naming/010---Prefijos":{"title":"010 - Prefijos","links":[],"tags":[],"content":"Para agilizar la interpretación del programa, se definen unos prefijos en las variables que ayudan a identificarlas y reconocer de que tipo son. A continuación se detallan los diferentes campos donde se aplica.\n01. Entradas y Salidas\nLas entradas y salidas deben declararse en ControllerTags y se identificaran con un prefijo de dos letras en función del tipo: digital, analógica o seguras:\n\n\n                  \n                  Input/Output \n                  \n                \ndi  =  Digital Input\ndo = Digital Output\nai  = Analog Input\nao = Analog Output\nsi  = Safety Input\nso = Safety Output\n\nSeguido del prefijo hay que indicar el módulo ModX al que pertenece. A continuación se debe acompañar una barra baja y el nombre de la entrada/salida a título descriptivo.\n\nprefijo + ModX + _ + IOName\n\nEn el nombre de la variable NO hay que escribir el código eléctrico identificador del sensor; ese código debe ser introducido en el campo Description, para que quede constancia de la relación y además pueda ser filtrado en las búsquedas.\n\n\n                  \n                  Ejemplo \n                  \n                \n\n\n02. Ejes\nLos ejes deben llamarse con el prefijo ax y el módulo al que corresponden ModX seguidamente de una barra baja y la correspondiente referencia a la estación donde se usa y al nombre del propio eje.\n\n***ax + ModX + _ + Station + ServoName\n\n\n\n                  \n                  Ejemplo \n                  \n                \naxMod1_FillingPump1\naxMod2_TransferStarwheel\n\nEl MotionGroup debe llamarse siempre igual en todas las máquinas:\n==XXXX"},"001---Naming/011---Alias":{"title":"011 - Alias","links":[],"tags":[],"content":"Con el fin de poder compartir rutinas de forma más practica, y de reducir la longitud de los tags, se debe referenciar las estructuras mayores más habituales usando los Alias\n01. Máquina\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmod1XXX_Machine.mach.Commandcmd.Statussts.Parametersparam.Valuesval.Devicesdev.Alarmsalm.Productionprod.Counterscount.Operationoper.Modemode.Servicesserv.Registerreg.PanelPCX.Doors\nSe pueden hacer alias de alias\n\n\n                  \n                  Ejemplo \n                  \n                \nAl hacer un alias st del GlobalTag, el resto de elementos de esa estructura pueden usar el st y de esta forma solo hay que actualizar un alias en la estación\n\n\n\n02. Estaciones\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmod1XXX_stYYYYY.st.Commandcmd.Statussts.Parametersparam.Valuesval.Devicesdev.Modemode.Sequenceseq\nmod1XXX_stYYYYY.\n\nMode\nEnable\nInhibit\nInhibitStation1\nInhibitStation2\nRejectWhenNoPresence\n\nLos modos de funcionamiento de la máquina activarán/desactivaran los enable de las estaciones.\nEj: El modo vaciado desactivará el Enable de la estación Infeed\n•\nDe forma manual también se pueden desactivar, pero los elementos tendrán que estar en una posición de reposo segura\nEl inhibit solo se puede activar/desactivar de forma manual, por si por ejemplo se estropea un motor y no se puede poner en posición pero aun así se quiere que la máquina trabaje.\nCon el inhibit activado, las alarmas asociadas no deben aparecer"},"003---Sequences/Introducción":{"title":"Introducción","links":[],"tags":[],"content":"Esto es una introducción para la carpeta 3"},"Carpeta-1/Desarrollo":{"title":"Desarrollo","links":[],"tags":[],"content":"Titulo 1\n\nContenido\nTitulo 2\nSubtitulo\nContenido adicional"},"Carpeta-1/Introducción":{"title":"Introducción","links":["Carpeta-1/Desarrollo"],"tags":[],"content":"Esto es una introducción para la carpeta 1\nPulsa aquí para ver más Desarrollo"},"Carpeta-2/Introducción":{"title":"Introducción","links":[],"tags":[],"content":"Esto es una introducción para la carpeta 2"},"IT-Naming-(revisar)":{"title":"IT Naming (revisar)","links":[],"tags":[],"content":"Naming Convenction\nSegún IT:          Site+dpto+building+machineID+deviceType+#\n**PLIND-P7-12345678-**HMI\nSegún GE PF:  Site+dpto+building+machineID+deviceID+deviceType+#\nPAIND-P4-30016019-AB30-PLC1\nPGKIND-GE218008-140A1-PLC1\nSegún GE IA :  Site+dpto+machineID+deviceID+deviceType+#\nPL****IND-b201-30003989-ve01-cpu01\n(machineID = AssetID, deviceID = equipmentID, deviceType = functionID)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPLCCPUHMIHuman Machine InterfaceSTXStratix switchIODistributed Inputs/OutputsSRVServodriverVFDVariable Frequency DriveDRSDoors (safety gateway)VALPneumatic ValvesCAMCameraPRTPrinterREOREO FeederRBTRobotNASNetwork Attached StorageWEIWeight Load Scale\n"},"index":{"title":"Home","links":["Carpeta-1/Introducción","Carpeta-2/Introducción","003---Sequences/Introducción"],"tags":[],"content":"Guía de Programación de Grifols Engineering, S.A.\nIntroducción 1\nIntroducción 2\nIntroducción 3"}}